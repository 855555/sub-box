{
  "openapi": "3.0.3",
  "info": {
    "title": "3X-UI",
    "description": "The **Postman collection** for the MHSanaei/3x-ui offers a comprehensive range of API endpoints, allowing users to manage various operations efficiently. These include authentication, inbound management (listing, retrieving details, updating, and deleting), and client operations (retrieving, updating, deleting, and resetting traffic). Additionally, the collection includes specialized tasks such as resetting traffic statistics, removing depleted clients, exporting the database, and generating backups. This collection is designed to simplify interaction with the MHSanaei/3x-ui API , making it easier to manage inbounds, clients, and other key functionalities.\n\n### Customization\n\nWhile the examples in this documentation primarily demonstrate the **vless** protocol, you can easily customize configurations and parameters to meet your specific needs.\n\nTo identify the exact data required for server interactions, use the **Google Chrome** browser to access your panel. Open the **Inspect** tool, go to the **Network** tab, and perform the desired action, such as creating an inbound or client. Examine the request payload to determine the necessary parameters for your configuration. You can then replace the body data in the Postman collection with your custom settings as needed.\n\n<img src=\"https://content.pstmn.io/178f072a-fe63-46d2-b016-fa14200d2359/Mjc3NjAxMTE1LTU3YWIxNTE0LTU1NTAtNDA2Yy1hYWNmLTU4OTQ2YTIxOGQ2MS5wbmc=\">\n\n[<img src=\"https://run.pstmn.io/button.svg\" alt=\"Run In Postman\">](https://god.gw.postman.com/run-collection/16802678-1a4c9270-ac77-40ed-959a-7aa56dc4a415?action=collection%2Ffork&source=rip_markdown&collection-url=entityId%3D16802678-1a4c9270-ac77-40ed-959a-7aa56dc4a415%26entityType%3Dcollection%26workspaceId%3D2cd38c01-c851-4a15-a972-f181c23359d9)",
    "version": "1.0.0",
    "contact": {}
  },
  "servers": [
    {
      "url": "http://localhost"
    }
  ],
  "paths": {
    "/login": {
      "post": {
        "summary": "Login",
        "description": "## Description\n\nThis route is used to authenticate users and generate a session ID stored in a cookie named \"session,\" allowing authorized access to perform various operations within the panel.\n\n## Note\n\n- Retrieve the generated session ID from the cookie named \"session\".\n    \n- Ensure the provided credentials (`username` and `password`) are correct for successful authentication.\n    \n- Handle any potential errors or failure messages returned in the response.",
        "operationId": "login",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string",
                    "example": "admin"
                  },
                  "username": {
                    "type": "string",
                    "example": "admin"
                  }
                }
              },
              "examples": {
                "Login": {
                  "value": {
                    "password": "admin",
                    "username": "admin"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login / Failed",
            "headers": {
              "Content-Encoding": {
                "schema": {
                  "type": "string",
                  "example": "gzip"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "string",
                  "example": "96"
                }
              },
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Thu, 17 Oct 2024 13:36:08 GMT"
                }
              },
              "Vary": {
                "schema": {
                  "type": "string",
                  "example": "Accept-Encoding"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "Login Successfully"
                    },
                    "obj": {
                      "nullable": true,
                      "example": null
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                },
                "examples": {
                  "Failed": {
                    "value": {
                      "msg": "Invalid username or password or secret.",
                      "obj": null,
                      "success": false
                    }
                  },
                  "Login": {
                    "value": {
                      "msg": "Login Successfully",
                      "obj": null,
                      "success": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/panel/api/inbounds/list": {
      "get": {
        "summary": "Inbounds",
        "description": "## Description\n\nThis route is used to retrieve a comprehensive list of all inbounds along with their associated client options and statistics.\n\n## Note\n\n- Requires a valid session ID (from the login endpoint), Include the session ID stored in the cookie named \"session\" for authorization.\n    \n- If no inbounds are available, the response will contain an empty array `[]`.\n    \n- Handle any potential errors or failure messages returned in the response.",
        "operationId": "inbounds",
        "responses": {
          "200": {
            "description": "Inbounds / No Inbounds",
            "headers": {
              "Content-Encoding": {
                "schema": {
                  "type": "string",
                  "example": "gzip"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "string",
                  "example": "58"
                }
              },
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Thu, 17 Oct 2024 13:46:23 GMT"
                }
              },
              "Vary": {
                "schema": {
                  "type": "string",
                  "example": "Accept-Encoding"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": ""
                    },
                    "obj": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "allocate": {
                            "type": "string",
                            "example": "{\n  \"strategy\": \"always\",\n  \"refresh\": 5,\n  \"concurrency\": 3\n}"
                          },
                          "clientStats": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "down": {
                                  "type": "number",
                                  "example": 0
                                },
                                "email": {
                                  "type": "string",
                                  "example": "hyvcs325"
                                },
                                "enable": {
                                  "type": "boolean",
                                  "example": true
                                },
                                "expiryTime": {
                                  "type": "number",
                                  "example": 0
                                },
                                "id": {
                                  "type": "number",
                                  "example": 3
                                },
                                "inboundId": {
                                  "type": "number",
                                  "example": 3
                                },
                                "reset": {
                                  "type": "number",
                                  "example": 0
                                },
                                "total": {
                                  "type": "number",
                                  "example": 0
                                },
                                "up": {
                                  "type": "number",
                                  "example": 0
                                }
                              }
                            },
                            "example": [
                              {
                                "down": 0,
                                "email": "hyvcs325",
                                "enable": true,
                                "expiryTime": 0,
                                "id": 3,
                                "inboundId": 3,
                                "reset": 0,
                                "total": 0,
                                "up": 0
                              },
                              {
                                "down": 0,
                                "email": "27225ost",
                                "enable": true,
                                "expiryTime": 0,
                                "id": 5,
                                "inboundId": 3,
                                "reset": 0,
                                "total": 0,
                                "up": 0
                              }
                            ]
                          },
                          "down": {
                            "type": "number",
                            "example": 0
                          },
                          "enable": {
                            "type": "boolean",
                            "example": true
                          },
                          "expiryTime": {
                            "type": "number",
                            "example": 0
                          },
                          "id": {
                            "type": "number",
                            "example": 3
                          },
                          "listen": {
                            "type": "string",
                            "example": ""
                          },
                          "port": {
                            "type": "number",
                            "example": 37155
                          },
                          "protocol": {
                            "type": "string",
                            "example": "vless"
                          },
                          "remark": {
                            "type": "string",
                            "example": ""
                          },
                          "settings": {
                            "type": "string",
                            "example": "{\n  \"clients\": [\n    {\n      \"email\": \"hyvcs325\",\n      \"enable\": true,\n      \"expiryTime\": 0,\n      \"flow\": \"\",\n      \"id\": \"819920c0-22c8-4c83-8713-9c3da4980396\",\n      \"limitIp\": 0,\n      \"reset\": 0,\n      \"subId\": \"jmrwimzhicxm7hrm\",\n      \"tgId\": \"\",\n      \"totalGB\": 0\n    },\n    {\n      \"email\": \"27225ost\",\n      \"enable\": true,\n      \"expiryTime\": 0,\n      \"flow\": \"\",\n      \"id\": \"bf036995-a81d-41b3-8e06-8e233418c96a\",\n      \"limitIp\": 0,\n      \"reset\": 0,\n      \"subId\": \"jw45dtw6rhvefikz\",\n      \"tgId\": \"\",\n      \"totalGB\": 0\n    }\n  ],\n  \"decryption\": \"none\",\n  \"fallbacks\": []\n}"
                          },
                          "sniffing": {
                            "type": "string",
                            "example": "{\n  \"enabled\": false,\n  \"destOverride\": [\n    \"http\",\n    \"tls\",\n    \"quic\",\n    \"fakedns\"\n  ],\n  \"metadataOnly\": false,\n  \"routeOnly\": false\n}"
                          },
                          "streamSettings": {
                            "type": "string",
                            "example": "{\n  \"network\": \"tcp\",\n  \"security\": \"reality\",\n  \"externalProxy\": [],\n  \"realitySettings\": {\n    \"show\": false,\n    \"xver\": 0,\n    \"dest\": \"yahoo.com:443\",\n    \"serverNames\": [\n      \"yahoo.com\",\n      \"www.yahoo.com\"\n    ],\n    \"privateKey\": \"QJS9AerMmDU-DrTe_SAL7vX6_2wg19OxCuthZLLs40g\",\n    \"minClient\": \"\",\n    \"maxClient\": \"\",\n    \"maxTimediff\": 0,\n    \"shortIds\": [\n      \"97de\",\n      \"5f7b4df7d0605151\",\n      \"cc1a7d15c439\",\n      \"f196851a\",\n      \"e291c2\",\n      \"b10c0deeceec08\",\n      \"19\",\n      \"7db6c63a5d\"\n    ],\n    \"settings\": {\n      \"publicKey\": \"UNXIILQ_LpbZdXGbhNCMele1gaPVIfCJ9N0AoLYdRUE\",\n      \"fingerprint\": \"random\",\n      \"serverName\": \"\",\n      \"spiderX\": \"/\"\n    }\n  },\n  \"tcpSettings\": {\n    \"acceptProxyProtocol\": false,\n    \"header\": {\n      \"type\": \"none\"\n    }\n  }\n}"
                          },
                          "tag": {
                            "type": "string",
                            "example": "inbound-37155"
                          },
                          "total": {
                            "type": "number",
                            "example": 0
                          },
                          "up": {
                            "type": "number",
                            "example": 0
                          }
                        }
                      },
                      "example": [
                        {
                          "allocate": "{\n  \"strategy\": \"always\",\n  \"refresh\": 5,\n  \"concurrency\": 3\n}",
                          "clientStats": [
                            {
                              "down": 0,
                              "email": "hyvcs325",
                              "enable": true,
                              "expiryTime": 0,
                              "id": 3,
                              "inboundId": 3,
                              "reset": 0,
                              "total": 0,
                              "up": 0
                            },
                            {
                              "down": 0,
                              "email": "27225ost",
                              "enable": true,
                              "expiryTime": 0,
                              "id": 5,
                              "inboundId": 3,
                              "reset": 0,
                              "total": 0,
                              "up": 0
                            }
                          ],
                          "down": 0,
                          "enable": true,
                          "expiryTime": 0,
                          "id": 3,
                          "listen": "",
                          "port": 37155,
                          "protocol": "vless",
                          "remark": "",
                          "settings": "{\n  \"clients\": [\n    {\n      \"email\": \"hyvcs325\",\n      \"enable\": true,\n      \"expiryTime\": 0,\n      \"flow\": \"\",\n      \"id\": \"819920c0-22c8-4c83-8713-9c3da4980396\",\n      \"limitIp\": 0,\n      \"reset\": 0,\n      \"subId\": \"jmrwimzhicxm7hrm\",\n      \"tgId\": \"\",\n      \"totalGB\": 0\n    },\n    {\n      \"email\": \"27225ost\",\n      \"enable\": true,\n      \"expiryTime\": 0,\n      \"flow\": \"\",\n      \"id\": \"bf036995-a81d-41b3-8e06-8e233418c96a\",\n      \"limitIp\": 0,\n      \"reset\": 0,\n      \"subId\": \"jw45dtw6rhvefikz\",\n      \"tgId\": \"\",\n      \"totalGB\": 0\n    }\n  ],\n  \"decryption\": \"none\",\n  \"fallbacks\": []\n}",
                          "sniffing": "{\n  \"enabled\": false,\n  \"destOverride\": [\n    \"http\",\n    \"tls\",\n    \"quic\",\n    \"fakedns\"\n  ],\n  \"metadataOnly\": false,\n  \"routeOnly\": false\n}",
                          "streamSettings": "{\n  \"network\": \"tcp\",\n  \"security\": \"reality\",\n  \"externalProxy\": [],\n  \"realitySettings\": {\n    \"show\": false,\n    \"xver\": 0,\n    \"dest\": \"yahoo.com:443\",\n    \"serverNames\": [\n      \"yahoo.com\",\n      \"www.yahoo.com\"\n    ],\n    \"privateKey\": \"QJS9AerMmDU-DrTe_SAL7vX6_2wg19OxCuthZLLs40g\",\n    \"minClient\": \"\",\n    \"maxClient\": \"\",\n    \"maxTimediff\": 0,\n    \"shortIds\": [\n      \"97de\",\n      \"5f7b4df7d0605151\",\n      \"cc1a7d15c439\",\n      \"f196851a\",\n      \"e291c2\",\n      \"b10c0deeceec08\",\n      \"19\",\n      \"7db6c63a5d\"\n    ],\n    \"settings\": {\n      \"publicKey\": \"UNXIILQ_LpbZdXGbhNCMele1gaPVIfCJ9N0AoLYdRUE\",\n      \"fingerprint\": \"random\",\n      \"serverName\": \"\",\n      \"spiderX\": \"/\"\n    }\n  },\n  \"tcpSettings\": {\n    \"acceptProxyProtocol\": false,\n    \"header\": {\n      \"type\": \"none\"\n    }\n  }\n}",
                          "tag": "inbound-37155",
                          "total": 0,
                          "up": 0
                        },
                        {
                          "allocate": "{\n  \"strategy\": \"always\",\n  \"refresh\": 5,\n  \"concurrency\": 3\n}",
                          "clientStats": [
                            {
                              "down": 0,
                              "email": "s729v2km",
                              "enable": true,
                              "expiryTime": 0,
                              "id": 4,
                              "inboundId": 4,
                              "reset": 0,
                              "total": 0,
                              "up": 0
                            }
                          ],
                          "down": 0,
                          "enable": true,
                          "expiryTime": 0,
                          "id": 4,
                          "listen": "",
                          "port": 44360,
                          "protocol": "vless",
                          "remark": "",
                          "settings": "{\n  \"clients\": [\n    {\n      \"id\": \"a39c9655-bcbb-43c4-9b3b-ebd8b7ae9e1e\",\n      \"flow\": \"\",\n      \"email\": \"s729v2km\",\n      \"limitIp\": 0,\n      \"totalGB\": 0,\n      \"expiryTime\": 0,\n      \"enable\": true,\n      \"tgId\": \"\",\n      \"subId\": \"n2b9ubaioe06cak8\",\n      \"reset\": 0\n    }\n  ],\n  \"decryption\": \"none\",\n  \"fallbacks\": []\n}",
                          "sniffing": "{\n  \"enabled\": false,\n  \"destOverride\": [\n    \"http\",\n    \"tls\",\n    \"quic\",\n    \"fakedns\"\n  ],\n  \"metadataOnly\": false,\n  \"routeOnly\": false\n}",
                          "streamSettings": "{\n  \"network\": \"tcp\",\n  \"security\": \"none\",\n  \"externalProxy\": [],\n  \"tcpSettings\": {\n    \"acceptProxyProtocol\": false,\n    \"header\": {\n      \"type\": \"none\"\n    }\n  }\n}",
                          "tag": "inbound-44360",
                          "total": 0,
                          "up": 0
                        }
                      ]
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                },
                "examples": {
                  "Inbounds": {
                    "value": {
                      "msg": "",
                      "obj": [
                        {
                          "allocate": "{\n  \"strategy\": \"always\",\n  \"refresh\": 5,\n  \"concurrency\": 3\n}",
                          "clientStats": [
                            {
                              "down": 0,
                              "email": "hyvcs325",
                              "enable": true,
                              "expiryTime": 0,
                              "id": 3,
                              "inboundId": 3,
                              "reset": 0,
                              "total": 0,
                              "up": 0
                            },
                            {
                              "down": 0,
                              "email": "27225ost",
                              "enable": true,
                              "expiryTime": 0,
                              "id": 5,
                              "inboundId": 3,
                              "reset": 0,
                              "total": 0,
                              "up": 0
                            }
                          ],
                          "down": 0,
                          "enable": true,
                          "expiryTime": 0,
                          "id": 3,
                          "listen": "",
                          "port": 37155,
                          "protocol": "vless",
                          "remark": "",
                          "settings": "{\n  \"clients\": [\n    {\n      \"email\": \"hyvcs325\",\n      \"enable\": true,\n      \"expiryTime\": 0,\n      \"flow\": \"\",\n      \"id\": \"819920c0-22c8-4c83-8713-9c3da4980396\",\n      \"limitIp\": 0,\n      \"reset\": 0,\n      \"subId\": \"jmrwimzhicxm7hrm\",\n      \"tgId\": \"\",\n      \"totalGB\": 0\n    },\n    {\n      \"email\": \"27225ost\",\n      \"enable\": true,\n      \"expiryTime\": 0,\n      \"flow\": \"\",\n      \"id\": \"bf036995-a81d-41b3-8e06-8e233418c96a\",\n      \"limitIp\": 0,\n      \"reset\": 0,\n      \"subId\": \"jw45dtw6rhvefikz\",\n      \"tgId\": \"\",\n      \"totalGB\": 0\n    }\n  ],\n  \"decryption\": \"none\",\n  \"fallbacks\": []\n}",
                          "sniffing": "{\n  \"enabled\": false,\n  \"destOverride\": [\n    \"http\",\n    \"tls\",\n    \"quic\",\n    \"fakedns\"\n  ],\n  \"metadataOnly\": false,\n  \"routeOnly\": false\n}",
                          "streamSettings": "{\n  \"network\": \"tcp\",\n  \"security\": \"reality\",\n  \"externalProxy\": [],\n  \"realitySettings\": {\n    \"show\": false,\n    \"xver\": 0,\n    \"dest\": \"yahoo.com:443\",\n    \"serverNames\": [\n      \"yahoo.com\",\n      \"www.yahoo.com\"\n    ],\n    \"privateKey\": \"QJS9AerMmDU-DrTe_SAL7vX6_2wg19OxCuthZLLs40g\",\n    \"minClient\": \"\",\n    \"maxClient\": \"\",\n    \"maxTimediff\": 0,\n    \"shortIds\": [\n      \"97de\",\n      \"5f7b4df7d0605151\",\n      \"cc1a7d15c439\",\n      \"f196851a\",\n      \"e291c2\",\n      \"b10c0deeceec08\",\n      \"19\",\n      \"7db6c63a5d\"\n    ],\n    \"settings\": {\n      \"publicKey\": \"UNXIILQ_LpbZdXGbhNCMele1gaPVIfCJ9N0AoLYdRUE\",\n      \"fingerprint\": \"random\",\n      \"serverName\": \"\",\n      \"spiderX\": \"/\"\n    }\n  },\n  \"tcpSettings\": {\n    \"acceptProxyProtocol\": false,\n    \"header\": {\n      \"type\": \"none\"\n    }\n  }\n}",
                          "tag": "inbound-37155",
                          "total": 0,
                          "up": 0
                        },
                        {
                          "allocate": "{\n  \"strategy\": \"always\",\n  \"refresh\": 5,\n  \"concurrency\": 3\n}",
                          "clientStats": [
                            {
                              "down": 0,
                              "email": "s729v2km",
                              "enable": true,
                              "expiryTime": 0,
                              "id": 4,
                              "inboundId": 4,
                              "reset": 0,
                              "total": 0,
                              "up": 0
                            }
                          ],
                          "down": 0,
                          "enable": true,
                          "expiryTime": 0,
                          "id": 4,
                          "listen": "",
                          "port": 44360,
                          "protocol": "vless",
                          "remark": "",
                          "settings": "{\n  \"clients\": [\n    {\n      \"id\": \"a39c9655-bcbb-43c4-9b3b-ebd8b7ae9e1e\",\n      \"flow\": \"\",\n      \"email\": \"s729v2km\",\n      \"limitIp\": 0,\n      \"totalGB\": 0,\n      \"expiryTime\": 0,\n      \"enable\": true,\n      \"tgId\": \"\",\n      \"subId\": \"n2b9ubaioe06cak8\",\n      \"reset\": 0\n    }\n  ],\n  \"decryption\": \"none\",\n  \"fallbacks\": []\n}",
                          "sniffing": "{\n  \"enabled\": false,\n  \"destOverride\": [\n    \"http\",\n    \"tls\",\n    \"quic\",\n    \"fakedns\"\n  ],\n  \"metadataOnly\": false,\n  \"routeOnly\": false\n}",
                          "streamSettings": "{\n  \"network\": \"tcp\",\n  \"security\": \"none\",\n  \"externalProxy\": [],\n  \"tcpSettings\": {\n    \"acceptProxyProtocol\": false,\n    \"header\": {\n      \"type\": \"none\"\n    }\n  }\n}",
                          "tag": "inbound-44360",
                          "total": 0,
                          "up": 0
                        }
                      ],
                      "success": true
                    }
                  },
                  "No Inbounds": {
                    "value": {
                      "msg": "",
                      "obj": [],
                      "success": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/panel/api/inbounds/get/{inboundId}": {
      "get": {
        "summary": "Inbound",
        "description": "## Description\n\nThis route is used to retrieve statistics and details for a specific inbound connection identified by `{inboundId}`. This includes information about the inbound itself, its statistics, and the clients connected to it.\n\n## **Path Parameter**\n\n- `{inboundId}`: Identifier of the specific inbound for which information is requested.\n    \n\n## Note\n\n- Requires a valid session ID (from the login endpoint), Include the session ID stored in the cookie named \"session\" for authorization.\n    \n- Ensure that the provided `{inboundId}` corresponds to an existing inbound within the system.\n    \n- Handle any potential errors or failure messages returned in the response.",
        "operationId": "inbound",
        "responses": {
          "200": {
            "description": "Successful / Failed",
            "headers": {
              "Content-Encoding": {
                "schema": {
                  "type": "string",
                  "example": "gzip"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "string",
                  "example": "90"
                }
              },
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Thu, 17 Oct 2024 13:45:50 GMT"
                }
              },
              "Vary": {
                "schema": {
                  "type": "string",
                  "example": "Accept-Encoding"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": ""
                    },
                    "obj": {
                      "type": "object",
                      "properties": {
                        "allocate": {
                          "type": "string",
                          "example": "{\n  \"strategy\": \"always\",\n  \"refresh\": 5,\n  \"concurrency\": 3\n}"
                        },
                        "clientStats": {
                          "nullable": true,
                          "example": null
                        },
                        "down": {
                          "type": "number",
                          "example": 0
                        },
                        "enable": {
                          "type": "boolean",
                          "example": true
                        },
                        "expiryTime": {
                          "type": "number",
                          "example": 0
                        },
                        "id": {
                          "type": "number",
                          "example": 2
                        },
                        "listen": {
                          "type": "string",
                          "example": ""
                        },
                        "port": {
                          "type": "number",
                          "example": 38476
                        },
                        "protocol": {
                          "type": "string",
                          "example": "vless"
                        },
                        "remark": {
                          "type": "string",
                          "example": ""
                        },
                        "settings": {
                          "type": "string",
                          "example": "{\n  \"clients\": [\n    {\n      \"id\": \"7da4dd82-66e6-4dfa-a66b-bf423f5407ea\",\n      \"flow\": \"\",\n      \"email\": \"t6l5ljc9\",\n      \"limitIp\": 0,\n      \"totalGB\": 0,\n      \"expiryTime\": 0,\n      \"enable\": true,\n      \"tgId\": \"\",\n      \"subId\": \"ile0ixxgdmjeuz5m\",\n      \"reset\": 0\n    }\n  ],\n  \"decryption\": \"none\",\n  \"fallbacks\": []\n}"
                        },
                        "sniffing": {
                          "type": "string",
                          "example": "{\n  \"enabled\": false,\n  \"destOverride\": [\n    \"http\",\n    \"tls\",\n    \"quic\",\n    \"fakedns\"\n  ],\n  \"metadataOnly\": false,\n  \"routeOnly\": false\n}"
                        },
                        "streamSettings": {
                          "type": "string",
                          "example": "{\n  \"network\": \"tcp\",\n  \"security\": \"reality\",\n  \"externalProxy\": [],\n  \"realitySettings\": {\n    \"show\": false,\n    \"xver\": 0,\n    \"dest\": \"yahoo.com:443\",\n    \"serverNames\": [\n      \"yahoo.com\",\n      \"www.yahoo.com\"\n    ],\n    \"privateKey\": \"yKUjT7SgfQH8fOTqsKLhwkOWiqRi5oC0Y4lFZXb0CTE\",\n    \"minClient\": \"\",\n    \"maxClient\": \"\",\n    \"maxTimediff\": 0,\n    \"shortIds\": [\n      \"8714e8f78bd9\",\n      \"8692\",\n      \"4e\",\n      \"9c46e1\",\n      \"52c0f48e\",\n      \"2d439ce7fd35bd\",\n      \"a64d2fc4a1\",\n      \"2520ce66461ba14d\"\n    ],\n    \"settings\": {\n      \"publicKey\": \"HBOoWQWTTFlN1CyPL-wzf-0S28Ae7D4E23f6GL9FaXw\",\n      \"fingerprint\": \"random\",\n      \"serverName\": \"\",\n      \"spiderX\": \"/\"\n    }\n  },\n  \"tcpSettings\": {\n    \"acceptProxyProtocol\": false,\n    \"header\": {\n      \"type\": \"none\"\n    }\n  }\n}"
                        },
                        "tag": {
                          "type": "string",
                          "example": "inbound-38476"
                        },
                        "total": {
                          "type": "number",
                          "example": 0
                        },
                        "up": {
                          "type": "number",
                          "example": 0
                        }
                      },
                      "nullable": true
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                },
                "examples": {
                  "Failed": {
                    "value": {
                      "msg": "Obtain Failed: record not found",
                      "obj": null,
                      "success": false
                    }
                  },
                  "Successful": {
                    "value": {
                      "msg": "",
                      "obj": {
                        "allocate": "{\n  \"strategy\": \"always\",\n  \"refresh\": 5,\n  \"concurrency\": 3\n}",
                        "clientStats": null,
                        "down": 0,
                        "enable": true,
                        "expiryTime": 0,
                        "id": 2,
                        "listen": "",
                        "port": 38476,
                        "protocol": "vless",
                        "remark": "",
                        "settings": "{\n  \"clients\": [\n    {\n      \"id\": \"7da4dd82-66e6-4dfa-a66b-bf423f5407ea\",\n      \"flow\": \"\",\n      \"email\": \"t6l5ljc9\",\n      \"limitIp\": 0,\n      \"totalGB\": 0,\n      \"expiryTime\": 0,\n      \"enable\": true,\n      \"tgId\": \"\",\n      \"subId\": \"ile0ixxgdmjeuz5m\",\n      \"reset\": 0\n    }\n  ],\n  \"decryption\": \"none\",\n  \"fallbacks\": []\n}",
                        "sniffing": "{\n  \"enabled\": false,\n  \"destOverride\": [\n    \"http\",\n    \"tls\",\n    \"quic\",\n    \"fakedns\"\n  ],\n  \"metadataOnly\": false,\n  \"routeOnly\": false\n}",
                        "streamSettings": "{\n  \"network\": \"tcp\",\n  \"security\": \"reality\",\n  \"externalProxy\": [],\n  \"realitySettings\": {\n    \"show\": false,\n    \"xver\": 0,\n    \"dest\": \"yahoo.com:443\",\n    \"serverNames\": [\n      \"yahoo.com\",\n      \"www.yahoo.com\"\n    ],\n    \"privateKey\": \"yKUjT7SgfQH8fOTqsKLhwkOWiqRi5oC0Y4lFZXb0CTE\",\n    \"minClient\": \"\",\n    \"maxClient\": \"\",\n    \"maxTimediff\": 0,\n    \"shortIds\": [\n      \"8714e8f78bd9\",\n      \"8692\",\n      \"4e\",\n      \"9c46e1\",\n      \"52c0f48e\",\n      \"2d439ce7fd35bd\",\n      \"a64d2fc4a1\",\n      \"2520ce66461ba14d\"\n    ],\n    \"settings\": {\n      \"publicKey\": \"HBOoWQWTTFlN1CyPL-wzf-0S28Ae7D4E23f6GL9FaXw\",\n      \"fingerprint\": \"random\",\n      \"serverName\": \"\",\n      \"spiderX\": \"/\"\n    }\n  },\n  \"tcpSettings\": {\n    \"acceptProxyProtocol\": false,\n    \"header\": {\n      \"type\": \"none\"\n    }\n  }\n}",
                        "tag": "inbound-38476",
                        "total": 0,
                        "up": 0
                      },
                      "success": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "inboundId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/panel/api/inbounds/getClientTraffics/{email}": {
      "get": {
        "summary": "Client Traffics with email",
        "description": "## Description\n\nThis route is used to retrieve information about a specific client based on their email. This endpoint provides details such as traffic statistics and other relevant information related to the client.\n\n## **Path Parameter**\n\n- `{email}`: Email address of the client for whom information is requested.\n    \n\n## **Note**\n\n- Requires a valid session ID (from the login endpoint), Include the session ID stored in the cookie named \"session\" for authorization.\n    \n- Ensure that the provided `{email}` corresponds to a valid client in the system to retrieve accurate information.\n- Handle any potential errors or failure messages returned in the response.",
        "operationId": "clientTrafficsWithEmail",
        "responses": {
          "200": {
            "description": "Successful / Failed",
            "headers": {
              "Content-Encoding": {
                "schema": {
                  "type": "string",
                  "example": "gzip"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "string",
                  "example": "60"
                }
              },
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Thu, 17 Oct 2024 13:49:06 GMT"
                }
              },
              "Vary": {
                "schema": {
                  "type": "string",
                  "example": "Accept-Encoding"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": ""
                    },
                    "obj": {
                      "type": "object",
                      "properties": {
                        "down": {
                          "type": "number",
                          "example": 0
                        },
                        "email": {
                          "type": "string",
                          "example": "s729v2km"
                        },
                        "enable": {
                          "type": "boolean",
                          "example": true
                        },
                        "expiryTime": {
                          "type": "number",
                          "example": 0
                        },
                        "id": {
                          "type": "number",
                          "example": 4
                        },
                        "inboundId": {
                          "type": "number",
                          "example": 4
                        },
                        "reset": {
                          "type": "number",
                          "example": 0
                        },
                        "total": {
                          "type": "number",
                          "example": 0
                        },
                        "up": {
                          "type": "number",
                          "example": 0
                        }
                      },
                      "nullable": true
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                },
                "examples": {
                  "Failed": {
                    "value": {
                      "msg": "",
                      "obj": null,
                      "success": true
                    }
                  },
                  "Successful": {
                    "value": {
                      "msg": "",
                      "obj": {
                        "down": 0,
                        "email": "s729v2km",
                        "enable": true,
                        "expiryTime": 0,
                        "id": 4,
                        "inboundId": 4,
                        "reset": 0,
                        "total": 0,
                        "up": 0
                      },
                      "success": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "email",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/panel/api/inbounds/getClientTrafficsById/{uuid}": {
      "get": {
        "summary": "Client Traffics with ID",
        "description": "## Description\n\nThis route is used to retrieve information about a specific client based on their email. This endpoint provides details such as traffic statistics and other relevant information related to the client.\n\n## **Path Parameter**\n\n- `{email}`: Email address of the client for whom information is requested.\n    \n\n## **Note**\n\n- Requires a valid session ID (from the login endpoint), Include the session ID stored in the cookie named \"session\" for authorization.\n    \n- Ensure that the provided `{email}` corresponds to a valid client in the system to retrieve accurate information.\n- Handle any potential errors or failure messages returned in the response.",
        "operationId": "clientTrafficsWithId",
        "responses": {
          "200": {
            "description": "Successful / Failed",
            "headers": {
              "Content-Encoding": {
                "schema": {
                  "type": "string",
                  "example": "gzip"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "string",
                  "example": "58"
                }
              },
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Thu, 17 Oct 2024 13:51:10 GMT"
                }
              },
              "Vary": {
                "schema": {
                  "type": "string",
                  "example": "Accept-Encoding"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": ""
                    },
                    "obj": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "down": {
                            "type": "number",
                            "example": 0
                          },
                          "email": {
                            "type": "string",
                            "example": "s729v2km"
                          },
                          "enable": {
                            "type": "boolean",
                            "example": true
                          },
                          "expiryTime": {
                            "type": "number",
                            "example": 0
                          },
                          "id": {
                            "type": "number",
                            "example": 4
                          },
                          "inboundId": {
                            "type": "number",
                            "example": 4
                          },
                          "reset": {
                            "type": "number",
                            "example": 0
                          },
                          "total": {
                            "type": "number",
                            "example": 0
                          },
                          "up": {
                            "type": "number",
                            "example": 0
                          }
                        }
                      },
                      "example": [
                        {
                          "down": 0,
                          "email": "s729v2km",
                          "enable": true,
                          "expiryTime": 0,
                          "id": 4,
                          "inboundId": 4,
                          "reset": 0,
                          "total": 0,
                          "up": 0
                        }
                      ]
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                },
                "examples": {
                  "Failed": {
                    "value": {
                      "msg": "",
                      "obj": [],
                      "success": true
                    }
                  },
                  "Successful": {
                    "value": {
                      "msg": "",
                      "obj": [
                        {
                          "down": 0,
                          "email": "s729v2km",
                          "enable": true,
                          "expiryTime": 0,
                          "id": 4,
                          "inboundId": 4,
                          "reset": 0,
                          "total": 0,
                          "up": 0
                        }
                      ],
                      "success": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "uuid",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/panel/api/inbounds/createbackup": {
      "get": {
        "summary": "tgbot - sends backup to admins",
        "description": "## Description\n\nThis endpoint triggers the creation of a system backup and initiates the delivery of the backup file to designated administrators via a configured Telegram bot. The server verifies the Telegram bot's activation status within the system settings and checks for the presence of admin IDs specified in the settings before sending the backup.\n\n## Note\n\n- Requires a valid session ID (from the login endpoint). Include the session ID stored in the cookie named \"session\" for authorization.\n    \n- Upon implementation, the backup file might be sent through the Telegram bot registered in the panel settings.\n    \n- Handle any potential errors or failure messages returned in the response.",
        "operationId": "tgbotSendsBackupToAdmins",
        "parameters": [
          {
            "name": "",
            "in": "header",
            "schema": {
              "type": "string",
              "example": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/panel/api/inbounds/clientIps/{email}": {
      "post": {
        "summary": "Client Ip address",
        "description": "## Description\n\nThis route is used to retrieve the IP records associated with a specific client identified by their email.\n\n## Path Parameter\n\n- **`{email}`** : Email address of the client for whom IP records are requested.\n    \n\n## Note\n\n- Requires a valid session ID (from the login endpoint), Include the session ID stored in the cookie named \"session\" for authorization.\n    \n- Ensure that the provided `{email}` corresponds to a valid client in the system to retrieve accurate IP records.\n- Handle any potential errors or failure messages returned in the response.",
        "operationId": "clientIpAddress",
        "responses": {
          "200": {
            "description": "Response",
            "headers": {
              "Content-Encoding": {
                "schema": {
                  "type": "string",
                  "example": "gzip"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "string",
                  "example": "70"
                }
              },
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Thu, 17 Oct 2024 13:53:11 GMT"
                }
              },
              "Vary": {
                "schema": {
                  "type": "string",
                  "example": "Accept-Encoding"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": ""
                    },
                    "obj": {
                      "type": "string",
                      "example": "No IP Record"
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                },
                "examples": {
                  "Response": {
                    "value": {
                      "msg": "",
                      "obj": "No IP Record",
                      "success": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "email",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/panel/api/inbounds/add": {
      "post": {
        "summary": "Add Inbound",
        "description": "## Description\n\nThis route is used to add a new inbound configuration.\n\n## Note\n\n- Requires a valid session ID (from the login endpoint), Include the session ID stored in the cookie named \"session\" for authorization.\n    \n- Ensure the provided inbound configuration parameters are correct to add the inbound successfully.\n- Ensure that sub-arrays or objects within the JSON body are stringified in JSON format for correct parsing by the panel.\n- Handle any potential errors or failure messages returned in the response.",
        "operationId": "addInbound",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "allocate": {
                    "type": "string",
                    "example": "{\"strategy\": \"always\",\"refresh\": 5,\"concurrency\": 3}"
                  },
                  "down": {
                    "type": "number",
                    "example": 0
                  },
                  "enable": {
                    "type": "boolean",
                    "example": true
                  },
                  "expiryTime": {
                    "type": "number",
                    "example": 0
                  },
                  "listen": {
                    "type": "string",
                    "example": ""
                  },
                  "port": {
                    "type": "number",
                    "example": 55421
                  },
                  "protocol": {
                    "type": "string",
                    "example": "vless"
                  },
                  "remark": {
                    "type": "string",
                    "example": "New"
                  },
                  "settings": {
                    "type": "string",
                    "example": "{\"clients\": [{\"id\": \"b86c0cdc-8a02-4da4-8693-72ba27005587\",\"flow\": \"\",\"email\": \"nt3wz904\",\"limitIp\": 0,\"totalGB\": 0,\"expiryTime\": 0,\"enable\": true,\"tgId\": \"\",\"subId\": \"rqv5zw1ydutamcp0\",\"reset\": 0}],\"decryption\": \"none\",\"fallbacks\": []}"
                  },
                  "sniffing": {
                    "type": "string",
                    "example": "{\"enabled\": true,\"destOverride\": [\"http\",\"tls\",\"quic\",\"fakedns\"],\"metadataOnly\": false,\"routeOnly\": false}"
                  },
                  "streamSettings": {
                    "type": "string",
                    "example": "{\"network\": \"tcp\",\"security\": \"reality\",\"externalProxy\": [],\"realitySettings\": {\"show\": false,\"xver\": 0,\"dest\": \"yahoo.com:443\",\"serverNames\": [\"yahoo.com\",\"www.yahoo.com\"],\"privateKey\": \"wIc7zBUiTXBGxM7S7wl0nCZ663OAvzTDNqS7-bsxV3A\",\"minClient\": \"\",\"maxClient\": \"\",\"maxTimediff\": 0,\"shortIds\": [\"47595474\",\"7a5e30\",\"810c1efd750030e8\",\"99\",\"9c19c134b8\",\"35fd\",\"2409c639a707b4\",\"c98fc6b39f45\"],\"settings\": {\"publicKey\": \"2UqLjQFhlvLcY7VzaKRotIDQFOgAJe1dYD1njigp9wk\",\"fingerprint\": \"random\",\"serverName\": \"\",\"spiderX\": \"/\"}},\"tcpSettings\": {\"acceptProxyProtocol\": false,\"header\": {\"type\": \"none\"}}}"
                  },
                  "total": {
                    "type": "number",
                    "example": 0
                  },
                  "up": {
                    "type": "number",
                    "example": 0
                  }
                }
              },
              "examples": {
                "Add Inbound": {
                  "value": {
                    "allocate": "{\"strategy\": \"always\",\"refresh\": 5,\"concurrency\": 3}",
                    "down": 0,
                    "enable": true,
                    "expiryTime": 0,
                    "listen": "",
                    "port": 55421,
                    "protocol": "vless",
                    "remark": "New",
                    "settings": "{\"clients\": [{\"id\": \"b86c0cdc-8a02-4da4-8693-72ba27005587\",\"flow\": \"\",\"email\": \"nt3wz904\",\"limitIp\": 0,\"totalGB\": 0,\"expiryTime\": 0,\"enable\": true,\"tgId\": \"\",\"subId\": \"rqv5zw1ydutamcp0\",\"reset\": 0}],\"decryption\": \"none\",\"fallbacks\": []}",
                    "sniffing": "{\"enabled\": true,\"destOverride\": [\"http\",\"tls\",\"quic\",\"fakedns\"],\"metadataOnly\": false,\"routeOnly\": false}",
                    "streamSettings": "{\"network\": \"tcp\",\"security\": \"reality\",\"externalProxy\": [],\"realitySettings\": {\"show\": false,\"xver\": 0,\"dest\": \"yahoo.com:443\",\"serverNames\": [\"yahoo.com\",\"www.yahoo.com\"],\"privateKey\": \"wIc7zBUiTXBGxM7S7wl0nCZ663OAvzTDNqS7-bsxV3A\",\"minClient\": \"\",\"maxClient\": \"\",\"maxTimediff\": 0,\"shortIds\": [\"47595474\",\"7a5e30\",\"810c1efd750030e8\",\"99\",\"9c19c134b8\",\"35fd\",\"2409c639a707b4\",\"c98fc6b39f45\"],\"settings\": {\"publicKey\": \"2UqLjQFhlvLcY7VzaKRotIDQFOgAJe1dYD1njigp9wk\",\"fingerprint\": \"random\",\"serverName\": \"\",\"spiderX\": \"/\"}},\"tcpSettings\": {\"acceptProxyProtocol\": false,\"header\": {\"type\": \"none\"}}}",
                    "total": 0,
                    "up": 0
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful / Failed",
            "headers": {
              "Content-Encoding": {
                "schema": {
                  "type": "string",
                  "example": "gzip"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "string",
                  "example": "809"
                }
              },
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Thu, 17 Oct 2024 13:54:54 GMT"
                }
              },
              "Vary": {
                "schema": {
                  "type": "string",
                  "example": "Accept-Encoding"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "Create Successfully"
                    },
                    "obj": {
                      "type": "object",
                      "properties": {
                        "allocate": {
                          "type": "string",
                          "example": "{\"strategy\": \"always\",\"refresh\": 5,\"concurrency\": 3}"
                        },
                        "clientStats": {
                          "nullable": true,
                          "example": null
                        },
                        "down": {
                          "type": "number",
                          "example": 0
                        },
                        "enable": {
                          "type": "boolean",
                          "example": true
                        },
                        "expiryTime": {
                          "type": "number",
                          "example": 0
                        },
                        "id": {
                          "type": "number",
                          "example": 5
                        },
                        "listen": {
                          "type": "string",
                          "example": ""
                        },
                        "port": {
                          "type": "number",
                          "example": 55421
                        },
                        "protocol": {
                          "type": "string",
                          "example": "vless"
                        },
                        "remark": {
                          "type": "string",
                          "example": "New"
                        },
                        "settings": {
                          "type": "string",
                          "example": "{\"clients\": [{\"id\": \"b86c0cdc-8a02-4da4-8693-72ba27005587\",\"flow\": \"\",\"email\": \"nt3wz904\",\"limitIp\": 0,\"totalGB\": 0,\"expiryTime\": 0,\"enable\": true,\"tgId\": \"\",\"subId\": \"rqv5zw1ydutamcp0\",\"reset\": 0}],\"decryption\": \"none\",\"fallbacks\": []}"
                        },
                        "sniffing": {
                          "type": "string",
                          "example": "{\"enabled\": true,\"destOverride\": [\"http\",\"tls\",\"quic\",\"fakedns\"],\"metadataOnly\": false,\"routeOnly\": false}"
                        },
                        "streamSettings": {
                          "type": "string",
                          "example": "{\"network\": \"tcp\",\"security\": \"reality\",\"externalProxy\": [],\"realitySettings\": {\"show\": false,\"xver\": 0,\"dest\": \"yahoo.com:443\",\"serverNames\": [\"yahoo.com\",\"www.yahoo.com\"],\"privateKey\": \"wIc7zBUiTXBGxM7S7wl0nCZ663OAvzTDNqS7-bsxV3A\",\"minClient\": \"\",\"maxClient\": \"\",\"maxTimediff\": 0,\"shortIds\": [\"47595474\",\"7a5e30\",\"810c1efd750030e8\",\"99\",\"9c19c134b8\",\"35fd\",\"2409c639a707b4\",\"c98fc6b39f45\"],\"settings\": {\"publicKey\": \"2UqLjQFhlvLcY7VzaKRotIDQFOgAJe1dYD1njigp9wk\",\"fingerprint\": \"random\",\"serverName\": \"\",\"spiderX\": \"/\"}},\"tcpSettings\": {\"acceptProxyProtocol\": false,\"header\": {\"type\": \"none\"}}}"
                        },
                        "tag": {
                          "type": "string",
                          "example": "inbound-55421"
                        },
                        "total": {
                          "type": "number",
                          "example": 0
                        },
                        "up": {
                          "type": "number",
                          "example": 0
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                },
                "examples": {
                  "Failed": {
                    "value": {
                      "msg": "Create Failed: Port already exists: 55421\n",
                      "obj": {
                        "allocate": "{\"strategy\": \"always\",\"refresh\": 5,\"concurrency\": 3}",
                        "clientStats": null,
                        "down": 0,
                        "enable": true,
                        "expiryTime": 0,
                        "id": 0,
                        "listen": "",
                        "port": 55421,
                        "protocol": "vless",
                        "remark": "New",
                        "settings": "{\"clients\": [{\"id\": \"b86c0cdc-8a02-4da4-8693-72ba27005587\",\"flow\": \"\",\"email\": \"nt3wz904\",\"limitIp\": 0,\"totalGB\": 0,\"expiryTime\": 0,\"enable\": true,\"tgId\": \"\",\"subId\": \"rqv5zw1ydutamcp0\",\"reset\": 0}],\"decryption\": \"none\",\"fallbacks\": []}",
                        "sniffing": "{\"enabled\": true,\"destOverride\": [\"http\",\"tls\",\"quic\",\"fakedns\"],\"metadataOnly\": false,\"routeOnly\": false}",
                        "streamSettings": "{\"network\": \"tcp\",\"security\": \"reality\",\"externalProxy\": [],\"realitySettings\": {\"show\": false,\"xver\": 0,\"dest\": \"yahoo.com:443\",\"serverNames\": [\"yahoo.com\",\"www.yahoo.com\"],\"privateKey\": \"wIc7zBUiTXBGxM7S7wl0nCZ663OAvzTDNqS7-bsxV3A\",\"minClient\": \"\",\"maxClient\": \"\",\"maxTimediff\": 0,\"shortIds\": [\"47595474\",\"7a5e30\",\"810c1efd750030e8\",\"99\",\"9c19c134b8\",\"35fd\",\"2409c639a707b4\",\"c98fc6b39f45\"],\"settings\": {\"publicKey\": \"2UqLjQFhlvLcY7VzaKRotIDQFOgAJe1dYD1njigp9wk\",\"fingerprint\": \"random\",\"serverName\": \"\",\"spiderX\": \"/\"}},\"tcpSettings\": {\"acceptProxyProtocol\": false,\"header\": {\"type\": \"none\"}}}",
                        "tag": "inbound-55421",
                        "total": 0,
                        "up": 0
                      },
                      "success": false
                    }
                  },
                  "Successful": {
                    "value": {
                      "msg": "Create Successfully",
                      "obj": {
                        "allocate": "{\"strategy\": \"always\",\"refresh\": 5,\"concurrency\": 3}",
                        "clientStats": null,
                        "down": 0,
                        "enable": true,
                        "expiryTime": 0,
                        "id": 5,
                        "listen": "",
                        "port": 55421,
                        "protocol": "vless",
                        "remark": "New",
                        "settings": "{\"clients\": [{\"id\": \"b86c0cdc-8a02-4da4-8693-72ba27005587\",\"flow\": \"\",\"email\": \"nt3wz904\",\"limitIp\": 0,\"totalGB\": 0,\"expiryTime\": 0,\"enable\": true,\"tgId\": \"\",\"subId\": \"rqv5zw1ydutamcp0\",\"reset\": 0}],\"decryption\": \"none\",\"fallbacks\": []}",
                        "sniffing": "{\"enabled\": true,\"destOverride\": [\"http\",\"tls\",\"quic\",\"fakedns\"],\"metadataOnly\": false,\"routeOnly\": false}",
                        "streamSettings": "{\"network\": \"tcp\",\"security\": \"reality\",\"externalProxy\": [],\"realitySettings\": {\"show\": false,\"xver\": 0,\"dest\": \"yahoo.com:443\",\"serverNames\": [\"yahoo.com\",\"www.yahoo.com\"],\"privateKey\": \"wIc7zBUiTXBGxM7S7wl0nCZ663OAvzTDNqS7-bsxV3A\",\"minClient\": \"\",\"maxClient\": \"\",\"maxTimediff\": 0,\"shortIds\": [\"47595474\",\"7a5e30\",\"810c1efd750030e8\",\"99\",\"9c19c134b8\",\"35fd\",\"2409c639a707b4\",\"c98fc6b39f45\"],\"settings\": {\"publicKey\": \"2UqLjQFhlvLcY7VzaKRotIDQFOgAJe1dYD1njigp9wk\",\"fingerprint\": \"random\",\"serverName\": \"\",\"spiderX\": \"/\"}},\"tcpSettings\": {\"acceptProxyProtocol\": false,\"header\": {\"type\": \"none\"}}}",
                        "tag": "inbound-55421",
                        "total": 0,
                        "up": 0
                      },
                      "success": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/panel/api/inbounds/addClient": {
      "post": {
        "summary": "Add Client to inbound",
        "description": "## Description\n\nThis route is used to add a new client to a specific inbound identified by its ID.\n\n## Note\n\n- Requires a valid session ID (from the login endpoint), Include the session ID stored in the cookie named \"session\" for authorization.\n    \n- Verify that the provided inbound ID (`id`) corresponds to an existing inbound within the system.\n- Format the client information in the `settings` parameter as a stringified JSON format within the request body.\n- Handle any potential errors or failure messages returned in the response.",
        "operationId": "addClientToInbound",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 5
                  },
                  "settings": {
                    "type": "string",
                    "example": "{\"clients\": [{\"id\": \"bbfad557-28f2-47e5-9f3d-e3c7f532fbda\",\"flow\": \"\",\"email\": \"dp1plmlt8\",\"limitIp\": 0,\"totalGB\": 0,\"expiryTime\": 0,\"enable\": true,\"tgId\": \"\",\"subId\": \"2rv0gb458kbfl532\",\"reset\": 0}]}"
                  }
                }
              },
              "examples": {
                "Add Client to inbound": {
                  "value": {
                    "id": 5,
                    "settings": "{\"clients\": [{\"id\": \"bbfad557-28f2-47e5-9f3d-e3c7f532fbda\",\"flow\": \"\",\"email\": \"dp1plmlt8\",\"limitIp\": 0,\"totalGB\": 0,\"expiryTime\": 0,\"enable\": true,\"tgId\": \"\",\"subId\": \"2rv0gb458kbfl532\",\"reset\": 0}]}"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful / Failed",
            "headers": {
              "Content-Encoding": {
                "schema": {
                  "type": "string",
                  "example": "gzip"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "string",
                  "example": "112"
                }
              },
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Thu, 17 Oct 2024 14:03:18 GMT"
                }
              },
              "Vary": {
                "schema": {
                  "type": "string",
                  "example": "Accept-Encoding"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "Client(s) added Successfully"
                    },
                    "obj": {
                      "nullable": true,
                      "example": null
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                },
                "examples": {
                  "Failed": {
                    "value": {
                      "msg": "Something went wrong! Failed: Duplicate email: dp1plmlt8\n",
                      "obj": null,
                      "success": false
                    }
                  },
                  "Successful": {
                    "value": {
                      "msg": "Client(s) added Successfully",
                      "obj": null,
                      "success": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/panel/api/inbounds/update/{inboundId}": {
      "post": {
        "summary": "Update Inbound",
        "description": "## Description\n\nThis route is used to update an existing inbound identified by its ID (`{inboundId}`).\n\n## **Path Parameter**\n\n- `{inboundId}`: Identifier of the specific inbound to be updated.\n    \n\n## Note\n\n- Requires a valid session ID (from the login endpoint), Include the session ID stored in the cookie named \"session\" for authorization.\n    \n- Verify that the provided `{inboundId}` corresponds to an existing inbound within the system.\n- Ensure that sub-arrays or objects within the JSON body are stringified in JSON format for correct parsing by the panel.\n- Handle any potential errors or failure messages returned in the response.",
        "operationId": "updateInbound",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "allocate": {
                    "type": "string",
                    "example": "{\n  \"strategy\": \"always\",\n  \"refresh\": 5,\n  \"concurrency\": 3\n}"
                  },
                  "down": {
                    "type": "number",
                    "example": 0
                  },
                  "enable": {
                    "type": "boolean",
                    "example": true
                  },
                  "expiryTime": {
                    "type": "number",
                    "example": 0
                  },
                  "listen": {
                    "type": "string",
                    "example": ""
                  },
                  "port": {
                    "type": "number",
                    "example": 44322
                  },
                  "protocol": {
                    "type": "string",
                    "example": "vless"
                  },
                  "remark": {
                    "type": "string",
                    "example": ""
                  },
                  "settings": {
                    "type": "string",
                    "example": "{\n  \"clients\": [\n    {\n      \"id\": \"a39c9655-bcbb-43c4-9b3b-ebd8b7ae9e1e\",\n      \"flow\": \"\",\n      \"email\": \"s729v2km\",\n      \"limitIp\": 0,\n      \"totalGB\": 0,\n      \"expiryTime\": 0,\n      \"enable\": true,\n      \"tgId\": \"\",\n      \"subId\": \"n2b9ubaioe06cak8\",\n      \"reset\": 0\n    }\n  ],\n  \"decryption\": \"none\",\n  \"fallbacks\": []\n}"
                  },
                  "sniffing": {
                    "type": "string",
                    "example": "{\n  \"enabled\": false,\n  \"destOverride\": [\n    \"http\",\n    \"tls\",\n    \"quic\",\n    \"fakedns\"\n  ],\n  \"metadataOnly\": false,\n  \"routeOnly\": false\n}"
                  },
                  "streamSettings": {
                    "type": "string",
                    "example": "{\n  \"network\": \"tcp\",\n  \"security\": \"none\",\n  \"externalProxy\": [],\n  \"tcpSettings\": {\n    \"acceptProxyProtocol\": false,\n    \"header\": {\n      \"type\": \"none\"\n    }\n  }\n}"
                  },
                  "total": {
                    "type": "number",
                    "example": 0
                  },
                  "up": {
                    "type": "number",
                    "example": 0
                  }
                }
              },
              "examples": {
                "Update Inbound": {
                  "value": {
                    "allocate": "{\n  \"strategy\": \"always\",\n  \"refresh\": 5,\n  \"concurrency\": 3\n}",
                    "down": 0,
                    "enable": true,
                    "expiryTime": 0,
                    "listen": "",
                    "port": 44322,
                    "protocol": "vless",
                    "remark": "",
                    "settings": "{\n  \"clients\": [\n    {\n      \"id\": \"a39c9655-bcbb-43c4-9b3b-ebd8b7ae9e1e\",\n      \"flow\": \"\",\n      \"email\": \"s729v2km\",\n      \"limitIp\": 0,\n      \"totalGB\": 0,\n      \"expiryTime\": 0,\n      \"enable\": true,\n      \"tgId\": \"\",\n      \"subId\": \"n2b9ubaioe06cak8\",\n      \"reset\": 0\n    }\n  ],\n  \"decryption\": \"none\",\n  \"fallbacks\": []\n}",
                    "sniffing": "{\n  \"enabled\": false,\n  \"destOverride\": [\n    \"http\",\n    \"tls\",\n    \"quic\",\n    \"fakedns\"\n  ],\n  \"metadataOnly\": false,\n  \"routeOnly\": false\n}",
                    "streamSettings": "{\n  \"network\": \"tcp\",\n  \"security\": \"none\",\n  \"externalProxy\": [],\n  \"tcpSettings\": {\n    \"acceptProxyProtocol\": false,\n    \"header\": {\n      \"type\": \"none\"\n    }\n  }\n}",
                    "total": 0,
                    "up": 0
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful / Failed",
            "headers": {
              "Content-Encoding": {
                "schema": {
                  "type": "string",
                  "example": "gzip"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "string",
                  "example": "542"
                }
              },
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Thu, 17 Oct 2024 14:12:37 GMT"
                }
              },
              "Vary": {
                "schema": {
                  "type": "string",
                  "example": "Accept-Encoding"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "Update Successfully"
                    },
                    "obj": {
                      "type": "object",
                      "properties": {
                        "allocate": {
                          "type": "string",
                          "example": "{\n  \"strategy\": \"always\",\n  \"refresh\": 5,\n  \"concurrency\": 3\n}"
                        },
                        "clientStats": {
                          "nullable": true,
                          "example": null
                        },
                        "down": {
                          "type": "number",
                          "example": 0
                        },
                        "enable": {
                          "type": "boolean",
                          "example": true
                        },
                        "expiryTime": {
                          "type": "number",
                          "example": 0
                        },
                        "id": {
                          "type": "number",
                          "example": 4
                        },
                        "listen": {
                          "type": "string",
                          "example": ""
                        },
                        "port": {
                          "type": "number",
                          "example": 44360
                        },
                        "protocol": {
                          "type": "string",
                          "example": "vless"
                        },
                        "remark": {
                          "type": "string",
                          "example": ""
                        },
                        "settings": {
                          "type": "string",
                          "example": "{\n  \"clients\": [\n    {\n      \"id\": \"a39c9655-bcbb-43c4-9b3b-ebd8b7ae9e1e\",\n      \"flow\": \"\",\n      \"email\": \"s729v2km\",\n      \"limitIp\": 0,\n      \"totalGB\": 0,\n      \"expiryTime\": 0,\n      \"enable\": true,\n      \"tgId\": \"\",\n      \"subId\": \"n2b9ubaioe06cak8\",\n      \"reset\": 0\n    }\n  ],\n  \"decryption\": \"none\",\n  \"fallbacks\": []\n}"
                        },
                        "sniffing": {
                          "type": "string",
                          "example": "{\n  \"enabled\": false,\n  \"destOverride\": [\n    \"http\",\n    \"tls\",\n    \"quic\",\n    \"fakedns\"\n  ],\n  \"metadataOnly\": false,\n  \"routeOnly\": false\n}"
                        },
                        "streamSettings": {
                          "type": "string",
                          "example": "{\n  \"network\": \"tcp\",\n  \"security\": \"none\",\n  \"externalProxy\": [],\n  \"tcpSettings\": {\n    \"acceptProxyProtocol\": false,\n    \"header\": {\n      \"type\": \"none\"\n    }\n  }\n}"
                        },
                        "tag": {
                          "type": "string",
                          "example": ""
                        },
                        "total": {
                          "type": "number",
                          "example": 0
                        },
                        "up": {
                          "type": "number",
                          "example": 0
                        }
                      }
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                },
                "examples": {
                  "Failed": {
                    "value": {
                      "msg": "Update Failed: record not found",
                      "obj": {
                        "allocate": "{\n  \"strategy\": \"always\",\n  \"refresh\": 5,\n  \"concurrency\": 3\n}",
                        "clientStats": null,
                        "down": 0,
                        "enable": true,
                        "expiryTime": 0,
                        "id": 6,
                        "listen": "",
                        "port": 44322,
                        "protocol": "vless",
                        "remark": "",
                        "settings": "{\n  \"clients\": [\n    {\n      \"id\": \"a39c9655-bcbb-43c4-9b3b-ebd8b7ae9e1e\",\n      \"flow\": \"\",\n      \"email\": \"s729v2km\",\n      \"limitIp\": 0,\n      \"totalGB\": 0,\n      \"expiryTime\": 0,\n      \"enable\": true,\n      \"tgId\": \"\",\n      \"subId\": \"n2b9ubaioe06cak8\",\n      \"reset\": 0\n    }\n  ],\n  \"decryption\": \"none\",\n  \"fallbacks\": []\n}",
                        "sniffing": "{\n  \"enabled\": false,\n  \"destOverride\": [\n    \"http\",\n    \"tls\",\n    \"quic\",\n    \"fakedns\"\n  ],\n  \"metadataOnly\": false,\n  \"routeOnly\": false\n}",
                        "streamSettings": "{\n  \"network\": \"tcp\",\n  \"security\": \"none\",\n  \"externalProxy\": [],\n  \"tcpSettings\": {\n    \"acceptProxyProtocol\": false,\n    \"header\": {\n      \"type\": \"none\"\n    }\n  }\n}",
                        "tag": "",
                        "total": 0,
                        "up": 0
                      },
                      "success": false
                    }
                  },
                  "Successful": {
                    "value": {
                      "msg": "Update Successfully",
                      "obj": {
                        "allocate": "{\n  \"strategy\": \"always\",\n  \"refresh\": 5,\n  \"concurrency\": 3\n}",
                        "clientStats": null,
                        "down": 0,
                        "enable": true,
                        "expiryTime": 0,
                        "id": 4,
                        "listen": "",
                        "port": 44360,
                        "protocol": "vless",
                        "remark": "",
                        "settings": "{\n  \"clients\": [\n    {\n      \"id\": \"a39c9655-bcbb-43c4-9b3b-ebd8b7ae9e1e\",\n      \"flow\": \"\",\n      \"email\": \"s729v2km\",\n      \"limitIp\": 0,\n      \"totalGB\": 0,\n      \"expiryTime\": 0,\n      \"enable\": true,\n      \"tgId\": \"\",\n      \"subId\": \"n2b9ubaioe06cak8\",\n      \"reset\": 0\n    }\n  ],\n  \"decryption\": \"none\",\n  \"fallbacks\": []\n}",
                        "sniffing": "{\n  \"enabled\": false,\n  \"destOverride\": [\n    \"http\",\n    \"tls\",\n    \"quic\",\n    \"fakedns\"\n  ],\n  \"metadataOnly\": false,\n  \"routeOnly\": false\n}",
                        "streamSettings": "{\n  \"network\": \"tcp\",\n  \"security\": \"none\",\n  \"externalProxy\": [],\n  \"tcpSettings\": {\n    \"acceptProxyProtocol\": false,\n    \"header\": {\n      \"type\": \"none\"\n    }\n  }\n}",
                        "tag": "",
                        "total": 0,
                        "up": 0
                      },
                      "success": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "inboundId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/panel/api/inbounds/updateClient/{uuid}": {
      "post": {
        "summary": "Update Client",
        "description": "## Description\n\nThis route is used to update an existing client identified by its UUID (`{uuid}`) within a specific inbound.\n\n## **Path Parameter**\n\n- `{uuid}` : Unique identifier (UUID) of the specific client for whom information is being updated.\n    \n\n## Note\n\n- Requires a valid session ID (from the login endpoint). Include the session ID stored in the cookie named \"session\" for authorization.\n    \n- Verify that the provided `{uuid}` corresponds to an existing client within the system associated with the specified inbound.\n- Format the client information in the `settings` parameter as a stringified JSON format within the request body.\n- Handle any potential errors or failure messages returned in the response.",
        "operationId": "updateClient",
        "parameters": [
          {
            "name": "cookie",
            "in": "header",
            "schema": {
              "type": "string",
              "example": ""
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 3
                  },
                  "settings": {
                    "type": "string",
                    "example": "{\"clients\":[{\"id\":\"95e4e7bb-7796-47e7-e8a7-f4055194f776\",\"alterId\":0,\"email\":\"test123\",\"limitIp\":2,\"totalGB\":42949672960,\"expiryTime\":1682864675944,\"enable\":true,\"tgId\":\"\",\"subId\":\"\"}]}"
                  }
                }
              },
              "examples": {
                "Update Client": {
                  "value": {
                    "id": 3,
                    "settings": "{\"clients\":[{\"id\":\"95e4e7bb-7796-47e7-e8a7-f4055194f776\",\"alterId\":0,\"email\":\"test123\",\"limitIp\":2,\"totalGB\":42949672960,\"expiryTime\":1682864675944,\"enable\":true,\"tgId\":\"\",\"subId\":\"\"}]}"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful / Failed",
            "headers": {
              "Content-Encoding": {
                "schema": {
                  "type": "string",
                  "example": "gzip"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "string",
                  "example": "106"
                }
              },
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Thu, 17 Oct 2024 14:15:08 GMT"
                }
              },
              "Vary": {
                "schema": {
                  "type": "string",
                  "example": "Accept-Encoding"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "Client updated Successfully"
                    },
                    "obj": {
                      "nullable": true,
                      "example": null
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                },
                "examples": {
                  "Failed": {
                    "value": {
                      "msg": "Something went wrong! Failed: empty client ID\n",
                      "obj": null,
                      "success": false
                    }
                  },
                  "Successful": {
                    "value": {
                      "msg": "Client updated Successfully",
                      "obj": null,
                      "success": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "uuid",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/panel/api/inbounds/clearClientIps/{email}": {
      "post": {
        "summary": "Clear Client Ip address",
        "description": "## Description\n\nThis route is used to reset or clear the IP records associated with a specific client identified by their email address (`{email}`).\n\n## Path Parameter\n\n- `{email}` : Email address of the client for whom IP records need to be reset.\n    \n\n## Note\n\n- Requires a valid session ID (from the login endpoint). Include the session ID stored in the cookie named \"session\" for authorization.\n    \n- Verify that the provided `{email}` corresponds to an existing client within the system for whom IP records need to be cleared.\n- Handle any potential errors or failure messages returned in the response.",
        "operationId": "clearClientIpAddress",
        "responses": {
          "200": {
            "description": "Response",
            "headers": {
              "Content-Encoding": {
                "schema": {
                  "type": "string",
                  "example": "gzip"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "string",
                  "example": "80"
                }
              },
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Thu, 17 Oct 2024 14:16:28 GMT"
                }
              },
              "Vary": {
                "schema": {
                  "type": "string",
                  "example": "Accept-Encoding"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "Log Cleared Successfully"
                    },
                    "obj": {
                      "nullable": true,
                      "example": null
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                },
                "examples": {
                  "Response": {
                    "value": {
                      "msg": "Log Cleared Successfully",
                      "obj": null,
                      "success": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "email",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/panel/api/inbounds/resetAllTraffics": {
      "post": {
        "summary": "Reset traffics of all inbounds",
        "description": "## Description\n\nThis route is used to reset the traffic statistics for all inbounds within the system.\n\n## Note\n\n- Requires a valid session ID (from the login endpoint). Include the session ID stored in the cookie named \"session\" for authorization.\n    \n- Resetting the traffics through this endpoint affects the statistics for all inbounds within the system.\n- Handle any potential errors or failure messages returned in the response.",
        "operationId": "resetTrafficsOfAllInbounds",
        "responses": {
          "200": {
            "description": "Response",
            "headers": {
              "Content-Encoding": {
                "schema": {
                  "type": "string",
                  "example": "gzip"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "string",
                  "example": "93"
                }
              },
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Thu, 17 Oct 2024 14:17:07 GMT"
                }
              },
              "Vary": {
                "schema": {
                  "type": "string",
                  "example": "Accept-Encoding"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "all traffic has been reset Successfully"
                    },
                    "obj": {
                      "nullable": true,
                      "example": null
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                },
                "examples": {
                  "Response": {
                    "value": {
                      "msg": "all traffic has been reset Successfully",
                      "obj": null,
                      "success": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/panel/api/inbounds/resetAllClientTraffics/{inboundId}": {
      "post": {
        "summary": "Reset traffics of all clients in an inbound",
        "description": "## Description\n\nThis route is used to reset the traffic statistics for all clients associated with a specific inbound identified by its ID (`{inboundId}`).\n\n## Path Parameter\n\n- `{inboundId}` : Identifier of the specific inbound for which client traffics are being reset.\n    \n\n## Note\n\n- Requires a valid session ID (from the login endpoint). Include the session ID stored in the cookie named \"session\" for authorization.\n    \n- Resetting the client traffics through this endpoint affects all clients associated with the specified inbound.\n- Verify that the provided `{inboundId}` corresponds to an existing inbound within the system.\n- Handle any potential errors or failure messages returned in the response.",
        "operationId": "resetTrafficsOfAllClientsInAnInbound",
        "responses": {
          "200": {
            "description": "Response",
            "headers": {
              "Content-Encoding": {
                "schema": {
                  "type": "string",
                  "example": "gzip"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "string",
                  "example": "107"
                }
              },
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Thu, 17 Oct 2024 14:17:39 GMT"
                }
              },
              "Vary": {
                "schema": {
                  "type": "string",
                  "example": "Accept-Encoding"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "All traffic from the client has been reset. Successfully"
                    },
                    "obj": {
                      "nullable": true,
                      "example": null
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                },
                "examples": {
                  "Response": {
                    "value": {
                      "msg": "All traffic from the client has been reset. Successfully",
                      "obj": null,
                      "success": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "inboundId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/panel/api/inbounds/{inboundId}/resetClientTraffic/{email}": {
      "post": {
        "summary": "Reset Client Traffic",
        "description": "## Description\n\nThis route is used to reset the traffic statistics for a specific client identified by their email address (`{email}`) within a particular inbound identified by its ID (`{inboundId}`).\n\n## Path Parameters\n\n- `{inboundId}` : Identifier of the specific inbound where the client belongs.\n- `{email}` : Email address of the client for whom traffic statistics are being reset.\n    \n\n## Note\n\n- Requires a valid session ID (from the login endpoint). Include the session ID stored in the cookie named \"session\" for authorization.\n    \n- Resetting the client traffic through this endpoint affects the statistics for the specified client within the specified inbound.\n- Verify that the provided {inboundId} corresponds to an existing inbound and `{email}` corresponds to an existing client within the system.\n- Handle any potential errors or failure messages returned in the response.",
        "operationId": "resetClientTraffic",
        "responses": {
          "200": {
            "description": "Response",
            "headers": {
              "Content-Encoding": {
                "schema": {
                  "type": "string",
                  "example": "gzip"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "string",
                  "example": "91"
                }
              },
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Thu, 17 Oct 2024 14:18:46 GMT"
                }
              },
              "Vary": {
                "schema": {
                  "type": "string",
                  "example": "Accept-Encoding"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "Traffic has been reset Successfully"
                    },
                    "obj": {
                      "nullable": true,
                      "example": null
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                },
                "examples": {
                  "Response": {
                    "value": {
                      "msg": "Traffic has been reset Successfully",
                      "obj": null,
                      "success": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "inboundId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "email",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/panel/api/inbounds/{inboundId}/delClient/{uuid}": {
      "post": {
        "summary": "Delete Client",
        "description": "## Description\n\nThis route is used to delete a client identified by its UUID (`{uuid}`) within a specific inbound identified by its ID (`{inboundId}`).\n\n## Path Parameters\n\n- `{inboundId}` : Identifier of the specific inbound from which the client will be deleted.\n- `{uuid}` : Unique identifier (UUID) of the specific client to be deleted.\n    \n\n## Note\n\n- Requires a valid session ID (from the login endpoint). Include the session ID stored in the cookie named \"session\" for authorization.\n    \n- Ensure that the provided `{inboundId}` corresponds to an existing inbound and `{uuid}` corresponds to an existing client within the system.\n- Deleting the client through this endpoint permanently removes the specified client from the specified inbound.\n- Handle any potential errors or failure messages returned in the response.",
        "operationId": "deleteClient",
        "responses": {
          "200": {
            "description": "Successful / Failed",
            "headers": {
              "Content-Encoding": {
                "schema": {
                  "type": "string",
                  "example": "gzip"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "string",
                  "example": "101"
                }
              },
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Thu, 17 Oct 2024 14:20:48 GMT"
                }
              },
              "Vary": {
                "schema": {
                  "type": "string",
                  "example": "Accept-Encoding"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "Client deleted Successfully"
                    },
                    "obj": {
                      "nullable": true,
                      "example": null
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                },
                "examples": {
                  "Failed": {
                    "value": {
                      "msg": "Something went wrong! Failed: record not found",
                      "obj": null,
                      "success": false
                    }
                  },
                  "Successful": {
                    "value": {
                      "msg": "Client deleted Successfully",
                      "obj": null,
                      "success": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "inboundId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "uuid",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/panel/api/inbounds/del/{inboundId}": {
      "post": {
        "summary": "Delete Inbound",
        "description": "## Description\n\nThis route is used to delete an inbound identified by its ID (`{inboundId}`).\n\n## Path Parameter\n\n- `{inboundId}` : Identifier of the specific inbound to be deleted.\n    \n\n## Note\n\n- Requires a valid session ID (from the login endpoint). Include the session ID stored in the cookie named \"session\" for authorization.\n    \n- Ensure that the provided `{inboundId}` corresponds to an existing inbound within the system.\n- Deleting the inbound through this endpoint permanently removes the specified inbound.\n- Handle any potential errors or failure messages returned in the response.",
        "operationId": "deleteInbound",
        "responses": {
          "200": {
            "description": "Successful / Failed",
            "headers": {
              "Content-Encoding": {
                "schema": {
                  "type": "string",
                  "example": "gzip"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "string",
                  "example": "89"
                }
              },
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Thu, 17 Oct 2024 14:21:34 GMT"
                }
              },
              "Vary": {
                "schema": {
                  "type": "string",
                  "example": "Accept-Encoding"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "Delete Successfully"
                    },
                    "obj": {
                      "type": "number",
                      "example": 3
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                },
                "examples": {
                  "Failed": {
                    "value": {
                      "msg": "Delete Failed: record not found",
                      "obj": 3,
                      "success": false
                    }
                  },
                  "Successful": {
                    "value": {
                      "msg": "Delete Successfully",
                      "obj": 3,
                      "success": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "inboundId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/panel/api/inbounds/delDepletedClients/{inboundId}": {
      "post": {
        "summary": "Delete Depleted Clients",
        "description": "## Description\n\nThis route is used to delete all depleted clients associated with a specific inbound identified by its ID (`{inboundId}`). If no `{inboundId}` is specified, depleted clients will be deleted from all inbounds.\n\n## Path Parameter\n\n- `{inboundId}` : Identifier of the specific inbound from which the depleted clients will be deleted. If not specified, depleted clients will be deleted from all inbounds.\n    \n\n## Note\n\n- Requires a valid session ID (from the login endpoint). Include the session ID stored in the cookie named \"session\" for authorization.\n    \n- If `{inboundId}` is provided, ensure it corresponds to an existing inbound within the system. If not provided, depleted clients will be deleted from all inbounds.\n- Deleting depleted clients through this endpoint permanently removes all depleted clients from the specified inbound(s).\n- Handle any potential errors or failure messages returned in the response.",
        "operationId": "deleteDepletedClients",
        "responses": {
          "200": {
            "description": "Response",
            "headers": {
              "Content-Encoding": {
                "schema": {
                  "type": "string",
                  "example": "gzip"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "string",
                  "example": "97"
                }
              },
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Thu, 17 Oct 2024 14:22:23 GMT"
                }
              },
              "Vary": {
                "schema": {
                  "type": "string",
                  "example": "Accept-Encoding"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": "All depleted clients are deleted Successfully"
                    },
                    "obj": {
                      "nullable": true,
                      "example": null
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                },
                "examples": {
                  "Response": {
                    "value": {
                      "msg": "All depleted clients are deleted Successfully",
                      "obj": null,
                      "success": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "inboundId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/panel/api/inbounds/onlines": {
      "post": {
        "summary": "Online Clients",
        "description": "Online Clients",
        "operationId": "onlineClients",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "headers": {
              "Content-Encoding": {
                "schema": {
                  "type": "string",
                  "example": "gzip"
                }
              },
              "Content-Length": {
                "schema": {
                  "type": "string",
                  "example": "68"
                }
              },
              "Date": {
                "schema": {
                  "type": "string",
                  "example": "Thu, 17 Oct 2024 14:26:49 GMT"
                }
              },
              "Vary": {
                "schema": {
                  "type": "string",
                  "example": "Accept-Encoding"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "msg": {
                      "type": "string",
                      "example": ""
                    },
                    "obj": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "88vzckui"
                      },
                      "example": [
                        "88vzckui"
                      ]
                    },
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                },
                "examples": {
                  "Response": {
                    "value": {
                      "msg": "",
                      "obj": [
                        "88vzckui"
                      ],
                      "success": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": []
}